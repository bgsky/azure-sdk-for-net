// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Costmanagement
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ReportConfigOperations.
    /// </summary>
    public static partial class ReportConfigOperationsExtensions
    {
            /// <summary>
            /// Lists all report configs for a subscription.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static ReportConfigListResult List(this IReportConfigOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all report configs for a subscription.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportConfigListResult> ListAsync(this IReportConfigOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all report configs for a resource group under a subscription.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure Resource Group Name.
            /// </param>
            public static ReportConfigListResult ListByResourceGroupName(this IReportConfigOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupNameAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all report configs for a resource group under a subscription.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure Resource Group Name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportConfigListResult> ListByResourceGroupNameAsync(this IReportConfigOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNameWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the report config for a subscription by report config name.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            public static ReportConfig Get(this IReportConfigOperations operations, string reportConfigName)
            {
                return operations.GetAsync(reportConfigName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the report config for a subscription by report config name.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportConfig> GetAsync(this IReportConfigOperations operations, string reportConfigName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(reportConfigName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// The operation to create or update a report config. Update operation
            /// requires latest eTag to be set in the request mandatorily. You may obtain
            /// the latest eTag by performing a get operation. Create operation does not
            /// require eTag.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the CreateOrUpdate Report Config operation.
            /// </param>
            public static ReportConfig CreateOrUpdate(this IReportConfigOperations operations, string reportConfigName, ReportConfig parameters)
            {
                return operations.CreateOrUpdateAsync(reportConfigName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The operation to create or update a report config. Update operation
            /// requires latest eTag to be set in the request mandatorily. You may obtain
            /// the latest eTag by performing a get operation. Create operation does not
            /// require eTag.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the CreateOrUpdate Report Config operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportConfig> CreateOrUpdateAsync(this IReportConfigOperations operations, string reportConfigName, ReportConfig parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(reportConfigName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// The operation to delete a report.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            public static void Delete(this IReportConfigOperations operations, string reportConfigName)
            {
                operations.DeleteAsync(reportConfigName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The operation to delete a report.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IReportConfigOperations operations, string reportConfigName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(reportConfigName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the report config for a resource group under a subscription by report
            /// config name.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure Resource Group Name.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            public static ReportConfig GetByResourceGroupName(this IReportConfigOperations operations, string resourceGroupName, string reportConfigName)
            {
                return operations.GetByResourceGroupNameAsync(resourceGroupName, reportConfigName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the report config for a resource group under a subscription by report
            /// config name.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure Resource Group Name.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportConfig> GetByResourceGroupNameAsync(this IReportConfigOperations operations, string resourceGroupName, string reportConfigName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByResourceGroupNameWithHttpMessagesAsync(resourceGroupName, reportConfigName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// The operation to create or update a report config. Update operation
            /// requires latest eTag to be set in the request mandatorily. You may obtain
            /// the latest eTag by performing a get operation. Create operation does not
            /// require eTag.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure Resource Group Name.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the CreateOrUpdate Report Config operation.
            /// </param>
            public static ReportConfig CreateOrUpdateByResourceGroupName(this IReportConfigOperations operations, string resourceGroupName, string reportConfigName, ReportConfig parameters)
            {
                return operations.CreateOrUpdateByResourceGroupNameAsync(resourceGroupName, reportConfigName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The operation to create or update a report config. Update operation
            /// requires latest eTag to be set in the request mandatorily. You may obtain
            /// the latest eTag by performing a get operation. Create operation does not
            /// require eTag.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure Resource Group Name.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the CreateOrUpdate Report Config operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportConfig> CreateOrUpdateByResourceGroupNameAsync(this IReportConfigOperations operations, string resourceGroupName, string reportConfigName, ReportConfig parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateByResourceGroupNameWithHttpMessagesAsync(resourceGroupName, reportConfigName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// The operation to delete a report config.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure Resource Group Name.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            public static void DeleteByResourceGroupName(this IReportConfigOperations operations, string resourceGroupName, string reportConfigName)
            {
                operations.DeleteByResourceGroupNameAsync(resourceGroupName, reportConfigName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The operation to delete a report config.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/costmanagement/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure Resource Group Name.
            /// </param>
            /// <param name='reportConfigName'>
            /// Report Config Name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteByResourceGroupNameAsync(this IReportConfigOperations operations, string resourceGroupName, string reportConfigName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteByResourceGroupNameWithHttpMessagesAsync(resourceGroupName, reportConfigName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}

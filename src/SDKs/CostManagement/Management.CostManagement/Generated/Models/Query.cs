// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Costmanagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    [JsonTransformation]
    public partial class Query : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Query class.
        /// </summary>
        public Query()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Query class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="columns">Array of columns</param>
        public Query(string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string nextLink = default(string), IList<QueryColumn> columns = default(IList<QueryColumn>), IList<IList<object>> rows = default(IList<IList<object>>))
            : base(id, name, type, tags)
        {
            NextLink = nextLink;
            Columns = columns;
            Rows = rows;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.nextLink")]
        public string NextLink { get; set; }

        /// <summary>
        /// Gets or sets array of columns
        /// </summary>
        [JsonProperty(PropertyName = "properties.columns")]
        public IList<QueryColumn> Columns { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.rows")]
        public IList<IList<object>> Rows { get; set; }

    }
}
